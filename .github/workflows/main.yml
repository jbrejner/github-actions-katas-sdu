name: Main workflow
on: push
# docker_username: ${{ github.actor }} 
env: # Set the secret as an input
  
  docker_password: ${{ secrets.GITHUB_TOKEN }} 
  GIT_COMMIT: ${{ github.sha }}
  ATRIAL: AbcdEfgh
jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Lowercasing
        run: echo "docker_username=kurt" >> $GITHUB_ENV 
        
      - name: Clone down repository
        uses: actions/checkout@v4
      
      - name: show var
        run: echo $docker_username


      - name: Build Application
        run: ci/build-app.sh

      - name: Test
        run: ci/unit-test-app.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
          include-hidden-files: true

  Linting:
    container: gradle:6-jdk11
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      
            
      - name: show var
        run: echo $docker_username

      - name: Lint code
        uses: super-linter/super-linter/slim@v8
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
  
  Docker-Image:
    runs-on: ubuntu-latest
    needs: Build
    permissions:
      contents: read
      packages: write
    steps:

      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: ls
        run: ls -la ci

      - name: build docker
        run: bash ci/build-docker.sh
      - 
        name: push docker
        run: bash ci/push-docker.sh

  Component-test:
    runs-on: ubuntu-latest
    needs: Docker-Image
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: Execute component test
        run: bash ci/component-test.sh

  Performance-test:
    runs-on: ubuntu-latest
    needs: Docker-Image
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: Execute performance test
        run: bash ci/performance-test.sh
